{{
    config(
        materialized='incremental',
        unique_key='LOOKUP_HASH_ADDRESS_PHYSICAL'
    )
}}

SELECT
    C_B_ADDR_SES.LOOKUP_HASH_ADDRESS_PHYSICAL AS LOOKUP_HASH_ADDRESS_PHYSICAL,
    CAST(EDW_PROCESS.SEQ_MASTER_MEMBER_ID_H0.NEXTVAL AS BIGINT)
        AS ADDRESS_PHYSICAL_ID,
    CAST('' Y '' AS VARCHAR (1 OCTETS)) AS ACTIVE_FLAG,
    CAST('' 1900 - 01 - 01 - 00.00 .00 '' AS TIMESTAMP)
        AS EFFECTIVE_START_DATETIME,
    CAST(NULL AS TIMESTAMP) AS EFFECTIVE_END_DATETIME,
    CAST(C_B_ADDR_SES.ADDR_LN_1 AS VARCHAR (128 OCTETS))
        AS PHYSICAL_ADDRESS_LINE_1,
    CAST(COALESCE(C_B_ADDR_SES.ADDR_LN_2, '''') AS VARCHAR (128 OCTETS))
        AS PHYSICAL_ADDRESS_LINE_2,
    CAST(COALESCE(C_B_ADDR_SES.SUITE, '''') AS VARCHAR (128 OCTETS))
        AS PHYSICAL_ADDRESS_SUITE,
    CAST(C_B_ADDR_SES.CITY AS VARCHAR (128 OCTETS)) AS PHYSICAL_ADDRESS_CITY,
    CAST(
        LEFT(TRIM(C_B_ADDR_SES.PSTL_CD) || '' 00000 '', 5) AS VARCHAR (
            64 OCTETS
        )
    ) AS PHYSICAL_ADDRESS_POSTAL_CODE,
    CAST(C_B_ADDR_SES.PSTL_CD_EXT AS VARCHAR (64 OCTETS))
        AS PHYSICAL_ADDRESS_POSTAL_CODE_EXTENSION,
    CAST(C_B_ADDR_SES.ST_PROV_CD AS VARCHAR (64 OCTETS))
        AS PHYSICAL_ADDRESS_STATE_PROVINCE_CODE,
    CAST(C_B_ADDR_SES.CNTRY_CD AS VARCHAR (512 OCTETS))
        AS PHYSICAL_ADDRESS_COUNTRY_CODE,
    CAST(COALESCE(C_B_ADDR_SES.STORE_ADDR_FLG, '' N '') AS VARCHAR (1 OCTETS))
        AS PHYSICAL_ADDRESS_STORE_ADDRESS_FLAG,
    CAST(C_B_ADDR_SES.VFYD_FLG AS VARCHAR (1 OCTETS))
        AS PHYSICAL_ADDRESS_VERIFICATION_FLAG,
    CAST(COALESCE(C_B_ADDR_SES.ANON_FLG, '' N '') AS VARCHAR (1 OCTETS))
        AS PHYSICAL_ADDRESS_ANONIMZATION_FLAG,
    CAST(COALESCE(HUB_LOAD_DIM_GEOGRAPHY_POSTAL.GEOGRAPHY_ID, -2) AS BIGINT)
        AS GEOGRAPHY_ID,
    CAST(COALESCE(C_B_ADDR_SES.LATITUDE, 0.0) AS DECIMAL(13, 7))
        AS PHYSICAL_ADDRESS_LATITUDE,
    CAST(COALESCE(C_B_ADDR_SES.LONGITUDE, 0.0) AS DECIMAL(13, 7))
        AS PHYSICAL_ADDRESS_LONGITUDE,
    CAST('' N '' AS VARCHAR (1 OCTETS)) AS ETL_SOURCE_DATA_DELETED_FLAG,
    CAST(
        ' || quote_literal(v_etl_source_table_1) || ' AS VARCHAR (256 OCTETS)
    ) AS ETL_SOURCE_TABLE_NAME,
    CAST(CURRENT_TIMESTAMP - CURRENT_TIMEZONE AS TIMESTAMP)
        AS ETL_CREATE_TIMESTAMP,
    CAST(CURRENT_TIMESTAMP - CURRENT_TIMEZONE AS TIMESTAMP)
        AS ETL_UPDATE_TIMESTAMP,
    CAST(' || v_stored_procedure_execution_id || ' AS BIGINT)
        AS ETL_MODIFIED_BY_JOB_ID,
    CAST(
        ' || quote_literal(v_hub_procedure_name) || ' AS VARCHAR (128 OCTETS)
    ) AS ETL_MODIFIED_BY_PROCESS
FROM {{ ref('C_B_ADDR_SESSION') }} AS C_B_ADDR_SES
LEFT JOIN
    {{ source('hub_load', 'dim_geography') }} AS HUB_LOAD_DIM_GEOGRAPHY_POSTAL
    ON CASE
        WHEN
            C_B_ADDR_SES.CNTRY_CD = 'US'
            THEN
                TRIM(
                    'USA'
                    || '-'
                    || TRIM(C_B_ADDR_SES.ST_PROV_CD)
                    || '-'
                    || TRIM(C_B_ADDR_SES.CITY)
                    || '-'
                    || LEFT(TRIM(C_B_ADDR_SES.PSTL_CD) || '00000', 5)
                )
        WHEN
            C_B_ADDR_SES.CNTRY_CD = 'CA'
            THEN TRIM('CAN' || '-' || TRIM(C_B_ADDR_SES.ST_PROV_CD))
    END = HUB_LOAD_DIM_GEOGRAPHY_POSTAL.GEOGRAPHY_HIERARCHY_LEVEL_MEMBER_CODE

{% if is_incremental() %}
    -- Include only new records or records to be updated.
    WHERE
        C_B_ADDR_SES.LOOKUP_HASH_ADDRESS_PHYSICAL NOT IN (
            SELECT LOOKUP_HASH_ADDRESS_PHYSICAL FROM {{ this }}
        )
{% endif %}

GROUP BY
    C_B_ADDR_SES.LOOKUP_HASH_ADDRESS_PHYSICAL,
    C_B_ADDR_SES.LOOKUP_HASH_ADDRESS_PHYSICAL,
    C_B_ADDR_SES.ADDR_LN_1,
    COALESCE(C_B_ADDR_SES.ADDR_LN_2, ''''),
    COALESCE(C_B_ADDR_SES.SUITE, ''''),
    C_B_ADDR_SES.CITY,
    C_B_ADDR_SES.PSTL_CD,
    C_B_ADDR_SES.PSTL_CD_EXT,
    C_B_ADDR_SES.ST_PROV_CD,
    C_B_ADDR_SES.CNTRY_CD,
    COALESCE(C_B_ADDR_SES.STORE_ADDR_FLG, '' N ''),
    C_B_ADDR_SES.VFYD_FLG,
    COALESCE(C_B_ADDR_SES.ANON_FLG, '' N ''),
    COALESCE(HUB_LOAD_DIM_GEOGRAPHY_POSTAL.GEOGRAPHY_ID, -2),
    COALESCE(C_B_ADDR_SES.LATITUDE, 0.0),
    COALESCE(C_B_ADDR_SES.LONGITUDE, 0.0)